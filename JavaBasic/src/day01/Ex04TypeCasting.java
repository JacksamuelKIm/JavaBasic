package day01;
// 형변환(typecasting)
// 형변환이란 변수의 데이터타입을 바꾸는 것을 형변환이라고 한다.
// 형변환에는 2가지 종류가 있다.
// 1. 암시적 형변환
// 2. 명시적 형변환

// 암시적 형변환은 더 작은 데이터타입을 더 큰 데이터타입으로 변환할 때 일어난다.
// byte를 short, int, long과 같은 형의 더 큰 크기로 변경하거나
// 정수를 실수로 혹은 기본형 데이터아비을 스트링이라는 클래스로 바꿀 때 자동으로 발생한다.

// 명시적 형변환은 더 큰 데이터타입을 더 작은 데이터타입으로 변환할 때 일어난다.
// long을 byte로 바꾸거나
// 혹은 참조형 변수 중에 변환 가능한 데이터타입일 경우 명시적 형변환을 해 줄수도 있다. ->클래스의 형변환은 나중에.....



public class Ex04TypeCasting {

	public static void main(String[] args) {
		int number1 = 30;
		long myLong = number1; //여기서 암시적 형변환 발생
		// 위 코드의 의미는 long 형변수 myLong을 만들고
		// number1의 현재값으로 myLong을 초기화하라는 의미이다. 
        System.out.println("myLong의 현재값: "+ myLong);
        
        //명시적 형변환은
        //변수 = (바꿀타입) 바꿀 값;
        //으로 형변환 해야한다.
        
        byte myByte = (byte)128; //byte빼면 완전에러 나서 인식 안됨
        System.out.println("myByte의 현재값: "+myByte);
        //참고로 바이트 값은 -128 ~ 127이므로 역전환되서 - 128 나옴 / 0은 +. 1 - 컴퓨터 인식
        //128은 자바에서 자동으로 int형 값으로 지정된다.
        //즉 2진법으로 표시하면 0000 0000 0000 0000 0000 0000 1000 0000
        //이 된다.
        //하지만 byte는 8비트이기 때문에 앞으 0은 무시하고
        //뒤의 8자리인 1000 0000만 저장이 된다
        //하지만 byte에서 1000 0000는 - 128이라서
        //overflow가 일어난다.
        
        //형변환을 이용하면 다음 코드도 가능하다.
        char myChar = 'A' + 32;
        //대문자 A에 32를 더하라는 무슨 의미????
        //Askii코드에서 대문자 A는 64, 소문자 a는 96
        System.out.println("myChar의 현재값: " +myChar);
        
        
	} // main end

}
