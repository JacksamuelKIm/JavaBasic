	8월 20일 2020년

	Day 09 학습정리

1. 
	
	private void test09() {
		// 1   2   3   4   5
		// 16  17  18  19  6
		// 15  24  25  20  7 
		// 14  23  22  21  8
		// 13  12  11  10  9 
			
		//어짜피 25번 돌림. 시계방향으로. 열이 늘었다 행이 늘었다 열이 줄었다 행이 줄었다(총 4개의 케이스).
		//굳이 이중 for문을 쓸 필요가 없다.그리고 방법을 푸는 여러가지가 있다.
	
2.	
	test11()
	
	일차원 배열에서 랜덤 번호 중복체크
	29 3 7 41 40 7
	0번째 자리에서 랜덤번호를 생성
	1번째 자리에서 랜덤번호 생성하고 뒤에꺼와 같은 지 체크 
		만약 같다면 다시 생성하고 또 체크
		통과하면 카운트 증가
	2번째 자리에 랜덤번호 생성하고 0,1번자리와 중복체크
		통과하면 카운트 증가
		만약 같다면 다시 생성하고 또 체크 
		
	나는 다 생성하고 나서부터 검사하려 했는데 00!!!
	

3. Method

호출할 때 메소드의 매개 변수에 넣어주는 것을 인수또는 인자라고 한다.
매개변수는 매개가 되는 변수. 매개변수에 따라서 그에 맞는 인수를 넣어준다

메소드 자료형: 메소드를 실행하고 나면 그 자료형(타입)으로 결과가 나온다 

return 키워드로 결과값 돌려줌 
함수는 선언부가 있고 호출부가 있다. 선언만 하고 호출을 하지 않으면 절대 실행되지 않음
main 메소드만 jvm이 알아서 호출해주는 거고 나머지난 다 우리가 직접 호출해야한다.


call by value (값에 의한 호출) 값을 넘겨줄 때
call by reference (참조에 의한 호출) 참조값을 넘겨줄때 (주소만 넘겨줌) heap에 있는 (배열)공간은 그대로
temp라는 이름은 사라져도 heap에 있는 공간은 그대로임				


return
1) 결과 값을 되돌려줄때
2) 거기서 문장을 더 이상 진행하지 않고 빠져나올 때



객체 안에 있는 것을 메소드라고 하고
객체와 관련없이 돌아가는 것을 함수라고 한다. main도 함수에 가깝고, static 붙은 애들도 함수라고 볼 수 있다. 


call by value인지 call by reference인지 구분을 잘해야 함수를 잘 활용할 수 있다.
	
private void swap(int a, int b) {
		// 변수 a와 b의 값 치환
		int temp = a;
		a = b;
		b = temp;
		
	}

public Ch03FuncEx02() {
		int a=10, b=20;
		
		System.out.println(a+", " +b); //10, 20
		
		swap(a, b);
		
		System.out.println(a+", " +b); //20, 10 가 당연히 안되지 call by value이므로
	}


선택정렬은 구현이 쉬우나 시간이 오래걸린다

개발자라면 삽입정렬 선택정렬 버블정렬 이 3개는 이해하고 있어야 한다.
퀵정렬 등이 속도는 매우 빠르나, 구현하기 어려움
물론 실제 개발에서는 collection이나 DB, 데이터베이스 등에서 정렬기능이 있어서 그걸 쓰기는 하지만
	
	
	
	
	
	